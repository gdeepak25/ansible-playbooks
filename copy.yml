---
  - name: Copy specific XML configuration key from source to destination on Windows
    hosts: windows
    vars:
      source_config_file: "D:\\trident\\trident04config.config"   # Full path to source file
      target_config_file: "D:\\artifact\\artifactconfig.config"  # Full path to target file
      key_to_copy: "DiscoveryClientFTP"
    tasks:
      - name: Read the source configuration file with PowerShell
        win_shell: |
          Get-Content -Path "{{ source_config_file }}" | Out-String
        register: source_content
  
      - name: Debug - Show the raw content of the source file
        debug:
          var: source_content.stdout
  
      - name: Extract the value of the key from the source content
        set_fact:
          extracted_value: "{{ source_content.stdout | regex_search('<add key=\"' + key_to_copy + '\" value=\"([^\"]+)\"', '\\1') }}"
      
      - name: Debug - Show the extracted value
        debug:
          msg: "Extracted value for {{ key_to_copy }}: {{ extracted_value }}"
  
      - name: Ensure target file exists
        win_copy:
          content: ""
          dest: "{{ target_config_file }}"
          force: no
  
      - name: Debug - Show the initial content of the target file
        win_shell: |
          Get-Content -Path "{{ target_config_file }}" | Out-String
        register: target_content_before
  
      - name: Debug - Display target file content before modification
        debug:
          var: target_content_before.stdout
  
      - name: Insert or update the key-value pair in the target config file
        win_lineinfile:
          path: "{{ target_config_file }}"
          regexp: '<add key="{{ key_to_copy }}" value=".*" />'
          line: '<add key="{{ key_to_copy }}" value="{{ extracted_value }}" />'
          create: yes
  
      - name: Debug - Show the modified content of the target file
        win_shell: |
          Get-Content -Path "{{ target_config_file }}" | Out-String
        register: target_content_after
  
      - name: Debug - Display target file content after modification
        debug:
          var: target_content_after.stdout
  